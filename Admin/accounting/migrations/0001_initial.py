# Generated by Django 4.2.16 on 2025-09-09 00:21

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("accounts", "0002_alter_role_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="SyncLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("PAYROLL", "Payroll"),
                            ("EXPENSE", "Expense"),
                            ("PAYROLL_PERIOD", "Payroll Period"),
                            ("DEPARTMENT_SUMMARY", "Department Summary"),
                            ("EXPENSE_CATEGORY", "Expense Category"),
                            ("FULL_SYNC", "Full Sync"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("PARTIAL", "Partial Success"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("source_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "source_reference",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "quickbooks_reference",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("records_processed", models.PositiveIntegerField(default=0)),
                ("records_succeeded", models.PositiveIntegerField(default=0)),
                ("records_failed", models.PositiveIntegerField(default=0)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("error_details", models.JSONField(blank=True, default=dict)),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("next_retry_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_sync_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Sync Log",
                "verbose_name_plural": "Sync Logs",
                "db_table": "accounting_sync_logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SyncConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("payroll_sync_enabled", models.BooleanField(default=True)),
                ("expense_sync_enabled", models.BooleanField(default=True)),
                (
                    "sync_frequency",
                    models.CharField(
                        choices=[
                            ("REALTIME", "Real-time"),
                            ("MINUTES_15", "Every 15 minutes"),
                            ("MINUTES_30", "Every 30 minutes"),
                            ("HOURLY", "Hourly"),
                            ("DAILY", "Daily"),
                        ],
                        default="MINUTES_15",
                        max_length=20,
                    ),
                ),
                ("realtime_sync_enabled", models.BooleanField(default=True)),
                ("scheduled_sync_enabled", models.BooleanField(default=True)),
                ("max_retries", models.PositiveIntegerField(default=3)),
                ("retry_delay_minutes", models.PositiveIntegerField(default=15)),
                ("last_full_sync", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_sync_configurations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Sync Configuration",
                "verbose_name_plural": "Sync Configurations",
                "db_table": "accounting_sync_configurations",
            },
        ),
        migrations.CreateModel(
            name="QuickBooksCredentials",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("client_id", models.CharField(max_length=255)),
                ("client_secret", models.CharField(max_length=255)),
                ("refresh_token", models.TextField()),
                ("access_token", models.TextField(blank=True, null=True)),
                ("token_expires_at", models.DateTimeField(blank=True, null=True)),
                ("realm_id", models.CharField(max_length=255)),
                (
                    "environment",
                    models.CharField(
                        choices=[("sandbox", "Sandbox"), ("production", "Production")],
                        default="sandbox",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_qb_credentials",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "QuickBooks Credentials",
                "verbose_name_plural": "QuickBooks Credentials",
                "db_table": "accounting_quickbooks_credentials",
            },
        ),
        migrations.CreateModel(
            name="PayrollSyncStatus",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("payroll_period_id", models.CharField(max_length=255)),
                ("payroll_period_name", models.CharField(max_length=255)),
                ("year", models.PositiveIntegerField()),
                ("month", models.PositiveIntegerField()),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=15
                    ),
                ),
                ("is_synced", models.BooleanField(default=False)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                (
                    "quickbooks_reference",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "sync_log",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payroll_sync_statuses",
                        to="accounting.synclog",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payroll Sync Status",
                "verbose_name_plural": "Payroll Sync Statuses",
                "db_table": "accounting_payroll_sync_statuses",
                "ordering": ["-year", "-month"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseSyncStatus",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("expense_id", models.CharField(max_length=255)),
                ("expense_reference", models.CharField(max_length=255)),
                ("employee_id", models.CharField(max_length=255)),
                ("employee_name", models.CharField(max_length=255)),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("expense_date", models.DateField()),
                ("is_synced", models.BooleanField(default=False)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                (
                    "quickbooks_reference",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "sync_log",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="expense_sync_statuses",
                        to="accounting.synclog",
                    ),
                ),
            ],
            options={
                "verbose_name": "Expense Sync Status",
                "verbose_name_plural": "Expense Sync Statuses",
                "db_table": "accounting_expense_sync_statuses",
                "ordering": ["-expense_date"],
            },
        ),
        migrations.CreateModel(
            name="DepartmentMapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("quickbooks_department_id", models.CharField(max_length=255)),
                ("quickbooks_department_name", models.CharField(max_length=255)),
                (
                    "quickbooks_class_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "quickbooks_class_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_department_mappings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quickbooks_mappings",
                        to="accounts.department",
                    ),
                ),
            ],
            options={
                "verbose_name": "Department Mapping",
                "verbose_name_plural": "Department Mappings",
                "db_table": "accounting_department_mappings",
            },
        ),
        migrations.CreateModel(
            name="AccountMapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "mapping_type",
                    models.CharField(
                        choices=[
                            ("EXPENSE_CATEGORY", "Expense Category"),
                            ("EXPENSE_TYPE", "Expense Type"),
                            ("DEPARTMENT", "Department"),
                            ("PAYROLL_COMPONENT", "Payroll Component"),
                            ("PAYROLL_DEDUCTION", "Payroll Deduction"),
                            ("PAYROLL_TAX", "Payroll Tax"),
                        ],
                        max_length=50,
                    ),
                ),
                ("source_id", models.CharField(max_length=255)),
                ("source_name", models.CharField(max_length=255)),
                ("quickbooks_account_id", models.CharField(max_length=255)),
                ("quickbooks_account_name", models.CharField(max_length=255)),
                ("quickbooks_account_type", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_account_mappings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Account Mapping",
                "verbose_name_plural": "Account Mappings",
                "db_table": "accounting_account_mappings",
            },
        ),
        migrations.AddIndex(
            model_name="synclog",
            index=models.Index(
                fields=["sync_type"], name="accounting__sync_ty_738ad4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="synclog",
            index=models.Index(fields=["status"], name="accounting__status_909ca0_idx"),
        ),
        migrations.AddIndex(
            model_name="synclog",
            index=models.Index(
                fields=["source_id"], name="accounting__source__3ac46e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="synclog",
            index=models.Index(
                fields=["created_at"], name="accounting__created_cf6a6f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="synclog",
            index=models.Index(
                fields=["is_active"], name="accounting__is_acti_31e991_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="syncconfiguration",
            index=models.Index(
                fields=["is_active"], name="accounting__is_acti_54b296_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="quickbookscredentials",
            index=models.Index(
                fields=["is_active"], name="accounting__is_acti_d7336d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payrollsyncstatus",
            index=models.Index(
                fields=["payroll_period_id"], name="accounting__payroll_4cc09e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payrollsyncstatus",
            index=models.Index(
                fields=["year", "month"], name="accounting__year_b369f3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payrollsyncstatus",
            index=models.Index(
                fields=["is_synced"], name="accounting__is_sync_7897bd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payrollsyncstatus",
            index=models.Index(
                fields=["is_active"], name="accounting__is_acti_51559b_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="payrollsyncstatus",
            unique_together={("year", "month")},
        ),
        migrations.AddIndex(
            model_name="expensesyncstatus",
            index=models.Index(
                fields=["expense_id"], name="accounting__expense_c5a8fc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensesyncstatus",
            index=models.Index(
                fields=["expense_reference"], name="accounting__expense_db7078_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensesyncstatus",
            index=models.Index(
                fields=["employee_id"], name="accounting__employe_dc6578_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensesyncstatus",
            index=models.Index(
                fields=["expense_date"], name="accounting__expense_c937b8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensesyncstatus",
            index=models.Index(
                fields=["is_synced"], name="accounting__is_sync_7b92a0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensesyncstatus",
            index=models.Index(
                fields=["is_active"], name="accounting__is_acti_c6fe24_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="departmentmapping",
            index=models.Index(
                fields=["department"], name="accounting__departm_c517a3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="departmentmapping",
            index=models.Index(
                fields=["quickbooks_department_id"],
                name="accounting__quickbo_bb1ccb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="departmentmapping",
            index=models.Index(
                fields=["is_active"], name="accounting__is_acti_1482be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accountmapping",
            index=models.Index(
                fields=["mapping_type"], name="accounting__mapping_6bd908_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accountmapping",
            index=models.Index(
                fields=["source_id"], name="accounting__source__18712e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accountmapping",
            index=models.Index(
                fields=["quickbooks_account_id"], name="accounting__quickbo_100961_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accountmapping",
            index=models.Index(
                fields=["is_active"], name="accounting__is_acti_2e3894_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="accountmapping",
            unique_together={("mapping_type", "source_id")},
        ),
    ]
