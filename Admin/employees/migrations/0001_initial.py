# Generated by Django 4.2.16 on 2025-08-12 20:12

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="EmployeeProfile",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "employment_status",
                    models.CharField(
                        choices=[
                            ("PROBATION", "Probation"),
                            ("CONFIRMED", "Confirmed"),
                            ("CONTRACT", "Contract"),
                            ("INTERN", "Intern"),
                            ("CONSULTANT", "Consultant"),
                        ],
                        default="PROBATION",
                        max_length=20,
                    ),
                ),
                (
                    "grade_level",
                    models.CharField(
                        choices=[
                            ("ENTRY", "Entry Level"),
                            ("JUNIOR", "Junior"),
                            ("SENIOR", "Senior"),
                            ("LEAD", "Lead"),
                            ("MANAGER", "Manager"),
                            ("DIRECTOR", "Director"),
                            ("EXECUTIVE", "Executive"),
                        ],
                        default="ENTRY",
                        max_length=20,
                    ),
                ),
                (
                    "basic_salary",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("probation_end_date", models.DateField(blank=True, null=True)),
                ("confirmation_date", models.DateField(blank=True, null=True)),
                ("bank_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "bank_account_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[0-9]{8,20}$", "Enter a valid account number"
                            )
                        ],
                    ),
                ),
                (
                    "bank_branch",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tax_identification_number",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                (
                    "marital_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SINGLE", "Single"),
                            ("MARRIED", "Married"),
                            ("DIVORCED", "Divorced"),
                            ("WIDOWED", "Widowed"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "spouse_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("number_of_children", models.PositiveIntegerField(default=0)),
                (
                    "work_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_employee_profiles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "employee_profiles",
                "ordering": ["user__employee_code"],
                "indexes": [
                    models.Index(
                        fields=["user"], name="employee_pr_user_id_600d90_idx"
                    ),
                    models.Index(
                        fields=["employment_status"],
                        name="employee_pr_employm_13290b_idx",
                    ),
                    models.Index(
                        fields=["is_active"], name="employee_pr_is_acti_4e40ad_idx"
                    ),
                    models.Index(
                        fields=["basic_salary"], name="employee_pr_basic_s_0da5b8_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "education_level",
                    models.CharField(
                        choices=[
                            ("HIGH_SCHOOL", "High School"),
                            ("DIPLOMA", "Diploma"),
                            ("BACHELOR", "Bachelor's Degree"),
                            ("MASTER", "Master's Degree"),
                            ("DOCTORATE", "Doctorate"),
                            ("CERTIFICATE", "Professional Certificate"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("qualification", models.CharField(max_length=200)),
                ("institution", models.CharField(max_length=200)),
                (
                    "field_of_study",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "start_year",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1950),
                            django.core.validators.MaxValueValidator(2030),
                        ]
                    ),
                ),
                (
                    "completion_year",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1950),
                            django.core.validators.MaxValueValidator(2030),
                        ]
                    ),
                ),
                ("grade_gpa", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "certificate_file",
                    models.FileField(
                        blank=True, null=True, upload_to="certificates/%Y/%m/"
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_education_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="education_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_education_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "employee_education",
                "ordering": ["-completion_year", "education_level"],
                "indexes": [
                    models.Index(
                        fields=["employee", "education_level"],
                        name="employee_ed_employe_c5e580_idx",
                    ),
                    models.Index(
                        fields=["completion_year"],
                        name="employee_ed_complet_05e460_idx",
                    ),
                    models.Index(
                        fields=["is_verified"], name="employee_ed_is_veri_8f49be_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("contract_number", models.CharField(max_length=50, unique=True)),
                (
                    "contract_type",
                    models.CharField(
                        choices=[
                            ("PERMANENT", "Permanent Employment"),
                            ("FIXED_TERM", "Fixed Term Contract"),
                            ("PROBATION", "Probation Contract"),
                            ("INTERNSHIP", "Internship"),
                            ("CONSULTANT", "Consultant Agreement"),
                            ("PART_TIME", "Part Time"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("ACTIVE", "Active"),
                            ("EXPIRED", "Expired"),
                            ("TERMINATED", "Terminated"),
                            ("RENEWED", "Renewed"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("signed_date", models.DateField(blank=True, null=True)),
                ("job_title", models.CharField(max_length=100)),
                (
                    "basic_salary",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("salary_breakdown", models.JSONField(blank=True, default=dict)),
                ("terms_and_conditions", models.TextField()),
                ("benefits", models.TextField(blank=True, null=True)),
                (
                    "working_hours",
                    models.DecimalField(decimal_places=2, default=9.75, max_digits=4),
                ),
                ("probation_period_months", models.PositiveIntegerField(default=0)),
                ("notice_period_days", models.PositiveIntegerField(default=30)),
                (
                    "contract_file",
                    models.FileField(
                        blank=True, null=True, upload_to="contracts/%Y/%m/"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("termination_date", models.DateTimeField(blank=True, null=True)),
                ("termination_reason", models.TextField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_contracts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="contracts",
                        to="accounts.department",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contracts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reporting_manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="managed_contracts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "terminated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="terminated_contracts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "employee_contracts",
                "ordering": ["-start_date"],
                "indexes": [
                    models.Index(
                        fields=["employee", "status"],
                        name="employee_co_employe_0b0f2b_idx",
                    ),
                    models.Index(
                        fields=["contract_type"], name="employee_co_contrac_ab3367_idx"
                    ),
                    models.Index(
                        fields=["start_date", "end_date"],
                        name="employee_co_start_d_61ef68_idx",
                    ),
                    models.Index(
                        fields=["is_active"], name="employee_co_is_acti_9a8567_idx"
                    ),
                ],
            },
        ),
    ]
