# Generated by Django 4.2.16 on 2025-09-04 12:17

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0002_alter_role_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Expense",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "reference",
                    models.CharField(editable=False, max_length=50, unique=True),
                ),
                ("job_title", models.CharField(max_length=100)),
                ("request_date", models.DateField()),
                ("date_incurred", models.DateField()),
                ("location", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("currency", models.CharField(default="LKR", max_length=3)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "DRAFT"),
                            ("SUBMITTED", "SUBMITTED"),
                            ("UNDER_REVIEW", "UNDER_REVIEW"),
                            ("APPROVED", "APPROVED"),
                            ("REJECTED", "REJECTED"),
                            ("DISBURSED", "DISBURSED"),
                            ("CANCELLED", "CANCELLED"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                (
                    "period",
                    models.CharField(
                        choices=[("MONTHLY", "MONTHLY"), ("YEARLY", "YEARLY")],
                        default="MONTHLY",
                        max_length=10,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[("NORMAL", "NORMAL"), ("URGENT", "URGENT")],
                        default="NORMAL",
                        max_length=10,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PAID_BY_EMPLOYEE", "PAID_BY_EMPLOYEE"),
                            ("ADVANCE_REQUESTED", "ADVANCE_REQUESTED"),
                            ("LOAN_REQUESTED", "LOAN_REQUESTED"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[("CASH", "CASH"), ("BANK_TRANSFER", "BANK_TRANSFER")],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "bank_account",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("add_to_payroll", models.BooleanField(default=False)),
                (
                    "payroll_effect",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ADD_TO_NEXT_PAYROLL", "ADD_TO_NEXT_PAYROLL"),
                            ("DEDUCT_FROM_NEXT_PAYROLL", "DEDUCT_FROM_NEXT_PAYROLL"),
                            ("DEDUCT_IN_INSTALLMENTS", "DEDUCT_IN_INSTALLMENTS"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "installment_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "payroll_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "PENDING_PAYROLL_PROCESSING",
                                "PENDING_PAYROLL_PROCESSING",
                            ),
                            ("ADDED_TO_PAYROLL", "ADDED_TO_PAYROLL"),
                            ("DEDUCTED_FROM_PAYROLL", "DEDUCTED_FROM_PAYROLL"),
                            ("PARTIALLY_PROCESSED", "PARTIALLY_PROCESSED"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                ("last_payroll_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "last_processed_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "remaining_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "expense_account",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("cost_center", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "tax_category",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("is_reimbursable", models.BooleanField(default=False)),
                ("is_taxable_benefit", models.BooleanField(default=False)),
                (
                    "quickbooks_sync_status",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("quickbooks_sync_date", models.DateTimeField(blank=True, null=True)),
                (
                    "quickbooks_reference",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("receipt_attached", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, null=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("rejected_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                ("disbursed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "disbursement_reference",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="expense_approvals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_expenses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_expenses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="department_expenses",
                        to="accounts.department",
                    ),
                ),
                (
                    "disbursed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="disbursed_expenses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="expenses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "expenses",
                "ordering": ["-request_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseCategory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_employee_expense", models.BooleanField(default=False)),
                ("is_operational_expense", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_expense_categories",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "expense_categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseDocument",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("document_type", models.CharField(max_length=50)),
                ("file", models.FileField(upload_to="expenses/documents/%Y/%m/")),
                ("file_name", models.CharField(max_length=255)),
                ("file_size", models.PositiveIntegerField()),
                ("file_type", models.CharField(max_length=100)),
                ("upload_date", models.DateTimeField(auto_now_add=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_receipt", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_expense_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "expense",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="expenses.expense",
                    ),
                ),
            ],
            options={
                "db_table": "expense_documents",
                "ordering": ["-upload_date"],
            },
        ),
        migrations.CreateModel(
            name="PayrollExpenseIntegration",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("payroll_period", models.CharField(max_length=20)),
                ("payroll_date", models.DateField()),
                (
                    "processed_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "remaining_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("operation", models.CharField(max_length=20)),
                ("status", models.CharField(max_length=20)),
                (
                    "payroll_reference",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_payroll_integrations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "expense",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payroll_integrations",
                        to="expenses.expense",
                    ),
                ),
            ],
            options={
                "db_table": "payroll_expense_integrations",
                "ordering": ["-payroll_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("requires_receipt", models.BooleanField(default=True)),
                ("is_taxable_benefit", models.BooleanField(default=False)),
                ("is_reimbursable", models.BooleanField(default=True)),
                ("is_purchase_return", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expense_types",
                        to="expenses.expensecategory",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_expense_types",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "expense_types",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseInstallmentPlan",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "installment_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("number_of_installments", models.PositiveIntegerField()),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_installment_plans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "expense",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="installment_plans",
                        to="expenses.expense",
                    ),
                ),
            ],
            options={
                "db_table": "expense_installment_plans",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseInstallment",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("installment_number", models.PositiveIntegerField()),
                ("scheduled_date", models.DateField()),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "remaining_balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("is_processed", models.BooleanField(default=False)),
                ("processed_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "payroll_integration",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="installments",
                        to="expenses.payrollexpenseintegration",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="installments",
                        to="expenses.expenseinstallmentplan",
                    ),
                ),
            ],
            options={
                "db_table": "expense_installments",
                "ordering": ["plan", "installment_number"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseDeductionThreshold",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "default_threshold_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("5000.00"), max_digits=12
                    ),
                ),
                (
                    "minimum_salary_protection_percent",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("70.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_deduction_thresholds",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "expense_deduction_thresholds",
            },
        ),
        migrations.CreateModel(
            name="ExpenseAuditTrail",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("action", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("previous_state", models.JSONField(blank=True, null=True)),
                ("current_state", models.JSONField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "expense",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audit_trail",
                        to="expenses.expense",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="expense_audit_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "expense_audit_trail",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseApprovalWorkflow",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("current_step", models.PositiveIntegerField(default=1)),
                ("total_steps", models.PositiveIntegerField(default=3)),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_approval_workflows",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "current_approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pending_expense_approvals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "expense",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="approval_workflow",
                        to="expenses.expense",
                    ),
                ),
                (
                    "next_approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="upcoming_expense_approvals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "expense_approval_workflows",
                "ordering": ["expense", "current_step"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseApprovalStep",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("step_number", models.PositiveIntegerField()),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="approval_steps",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_approval_steps",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="expenses.expenseapprovalworkflow",
                    ),
                ),
            ],
            options={
                "db_table": "expense_approval_steps",
                "ordering": ["workflow", "step_number"],
            },
        ),
        migrations.AddField(
            model_name="expense",
            name="expense_category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="expenses",
                to="expenses.expensecategory",
            ),
        ),
        migrations.AddField(
            model_name="expense",
            name="expense_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="expenses",
                to="expenses.expensetype",
            ),
        ),
        migrations.AddField(
            model_name="expense",
            name="rejected_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="rejected_expenses",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="expense",
            name="reviewed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reviewed_expenses",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="EmployeeDeductionThreshold",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "threshold_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "minimum_salary_protection_percent",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("effective_from", models.DateField(default=django.utils.timezone.now)),
                ("effective_to", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_employee_thresholds",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expense_deduction_thresholds",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "employee_deduction_thresholds",
                "ordering": ["employee", "-effective_from"],
            },
        ),
        migrations.CreateModel(
            name="PurchaseSummary",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "vendor_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "purchase_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "purchase_reference",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "reimbursement_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "total_returned",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_purchase_summaries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "expense",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_summary",
                        to="expenses.expense",
                    ),
                ),
            ],
            options={
                "db_table": "purchase_summaries",
                "indexes": [
                    models.Index(
                        fields=["expense"], name="purchase_su_expense_3ffcef_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="purchase_su_is_acti_aa8d05_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PurchaseItem",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("item_description", models.CharField(max_length=255)),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "return_status",
                    models.CharField(
                        choices=[
                            ("NOT_RETURNABLE", "NOT_RETURNABLE"),
                            ("RETURNABLE", "RETURNABLE"),
                            ("RETURNED", "RETURNED"),
                        ],
                        default="NOT_RETURNABLE",
                        max_length=20,
                    ),
                ),
                ("return_date", models.DateField(blank=True, null=True)),
                (
                    "return_quantity",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "refund_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_purchase_items",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="department_purchase_items",
                        to="accounts.department",
                    ),
                ),
                (
                    "expense",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_items",
                        to="expenses.expense",
                    ),
                ),
                (
                    "return_receipt",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="returned_items",
                        to="expenses.expensedocument",
                    ),
                ),
            ],
            options={
                "db_table": "purchase_items",
                "ordering": ["expense", "id"],
                "indexes": [
                    models.Index(
                        fields=["expense"], name="purchase_it_expense_d4db07_idx"
                    ),
                    models.Index(
                        fields=["return_status"], name="purchase_it_return__e53915_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="purchase_it_is_acti_7f2c09_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="payrollexpenseintegration",
            index=models.Index(
                fields=["expense"], name="payroll_exp_expense_05dd6e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payrollexpenseintegration",
            index=models.Index(
                fields=["payroll_period"], name="payroll_exp_payroll_54d100_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payrollexpenseintegration",
            index=models.Index(
                fields=["payroll_date"], name="payroll_exp_payroll_14d130_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payrollexpenseintegration",
            index=models.Index(
                fields=["operation"], name="payroll_exp_operati_8c9972_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payrollexpenseintegration",
            index=models.Index(fields=["status"], name="payroll_exp_status_bb85a5_idx"),
        ),
        migrations.AddIndex(
            model_name="payrollexpenseintegration",
            index=models.Index(
                fields=["is_active"], name="payroll_exp_is_acti_4513bd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensetype",
            index=models.Index(fields=["name"], name="expense_typ_name_1e1384_idx"),
        ),
        migrations.AddIndex(
            model_name="expensetype",
            index=models.Index(fields=["code"], name="expense_typ_code_be572e_idx"),
        ),
        migrations.AddIndex(
            model_name="expensetype",
            index=models.Index(
                fields=["category"], name="expense_typ_categor_bb8cc9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensetype",
            index=models.Index(
                fields=["is_active"], name="expense_typ_is_acti_1fcc63_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="expensetype",
            unique_together={("category", "name")},
        ),
        migrations.AddIndex(
            model_name="expenseinstallmentplan",
            index=models.Index(
                fields=["expense"], name="expense_ins_expense_9bfd4a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseinstallmentplan",
            index=models.Index(
                fields=["start_date"], name="expense_ins_start_d_a15c50_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseinstallmentplan",
            index=models.Index(
                fields=["is_active"], name="expense_ins_is_acti_e9ee66_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseinstallment",
            index=models.Index(fields=["plan"], name="expense_ins_plan_id_3b364e_idx"),
        ),
        migrations.AddIndex(
            model_name="expenseinstallment",
            index=models.Index(
                fields=["scheduled_date"], name="expense_ins_schedul_ba91d2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseinstallment",
            index=models.Index(
                fields=["is_processed"], name="expense_ins_is_proc_8e607f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseinstallment",
            index=models.Index(
                fields=["is_active"], name="expense_ins_is_acti_1e6553_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensedocument",
            index=models.Index(
                fields=["expense"], name="expense_doc_expense_d960d8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensedocument",
            index=models.Index(
                fields=["document_type"], name="expense_doc_documen_2ce4f2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensedocument",
            index=models.Index(
                fields=["is_receipt"], name="expense_doc_is_rece_ab84b1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensedocument",
            index=models.Index(
                fields=["is_active"], name="expense_doc_is_acti_17c63e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensedeductionthreshold",
            index=models.Index(
                fields=["is_active"], name="expense_ded_is_acti_6e5d5d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expensecategory",
            index=models.Index(fields=["name"], name="expense_cat_name_510d25_idx"),
        ),
        migrations.AddIndex(
            model_name="expensecategory",
            index=models.Index(fields=["code"], name="expense_cat_code_a581ce_idx"),
        ),
        migrations.AddIndex(
            model_name="expensecategory",
            index=models.Index(
                fields=["is_active"], name="expense_cat_is_acti_421191_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseaudittrail",
            index=models.Index(
                fields=["expense"], name="expense_aud_expense_eb42ff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseaudittrail",
            index=models.Index(fields=["action"], name="expense_aud_action_b986f4_idx"),
        ),
        migrations.AddIndex(
            model_name="expenseaudittrail",
            index=models.Index(
                fields=["timestamp"], name="expense_aud_timesta_81f1f2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseaudittrail",
            index=models.Index(fields=["user"], name="expense_aud_user_id_3ac627_idx"),
        ),
        migrations.AddIndex(
            model_name="expenseapprovalworkflow",
            index=models.Index(
                fields=["expense"], name="expense_app_expense_e43202_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseapprovalworkflow",
            index=models.Index(
                fields=["current_approver"], name="expense_app_current_36734c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseapprovalworkflow",
            index=models.Index(
                fields=["is_completed"], name="expense_app_is_comp_de4dd8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseapprovalworkflow",
            index=models.Index(
                fields=["is_active"], name="expense_app_is_acti_6e9405_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseapprovalstep",
            index=models.Index(
                fields=["workflow"], name="expense_app_workflo_268527_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseapprovalstep",
            index=models.Index(
                fields=["step_number"], name="expense_app_step_nu_a8c4b2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseapprovalstep",
            index=models.Index(
                fields=["approver"], name="expense_app_approve_87bc29_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseapprovalstep",
            index=models.Index(
                fields=["is_completed"], name="expense_app_is_comp_b599cc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseapprovalstep",
            index=models.Index(
                fields=["is_active"], name="expense_app_is_acti_0f9cfe_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="expenseapprovalstep",
            unique_together={("workflow", "step_number")},
        ),
        migrations.AddIndex(
            model_name="expense",
            index=models.Index(
                fields=["reference"], name="expenses_referen_d421ed_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expense",
            index=models.Index(fields=["employee"], name="expenses_employe_d63c95_idx"),
        ),
        migrations.AddIndex(
            model_name="expense",
            index=models.Index(
                fields=["department"], name="expenses_departm_66867d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expense",
            index=models.Index(
                fields=["expense_category"], name="expenses_expense_5d9195_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expense",
            index=models.Index(
                fields=["expense_type"], name="expenses_expense_c100d7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expense",
            index=models.Index(fields=["status"], name="expenses_status_86293f_idx"),
        ),
        migrations.AddIndex(
            model_name="expense",
            index=models.Index(
                fields=["request_date"], name="expenses_request_721146_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expense",
            index=models.Index(
                fields=["payment_status"], name="expenses_payment_973435_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expense",
            index=models.Index(
                fields=["payroll_status"], name="expenses_payroll_d2072c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expense",
            index=models.Index(
                fields=["is_active"], name="expenses_is_acti_4933c3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employeedeductionthreshold",
            index=models.Index(
                fields=["employee"], name="employee_de_employe_5aeba6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employeedeductionthreshold",
            index=models.Index(
                fields=["effective_from"], name="employee_de_effecti_3cd497_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employeedeductionthreshold",
            index=models.Index(
                fields=["effective_to"], name="employee_de_effecti_cf4810_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employeedeductionthreshold",
            index=models.Index(
                fields=["is_active"], name="employee_de_is_acti_d1d78b_idx"
            ),
        ),
    ]
