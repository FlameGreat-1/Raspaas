# Generated by Django 4.2.16 on 2025-08-12 20:13

import datetime
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Attendance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("check_in_1", models.TimeField(blank=True, null=True)),
                ("check_out_1", models.TimeField(blank=True, null=True)),
                ("check_in_2", models.TimeField(blank=True, null=True)),
                ("check_out_2", models.TimeField(blank=True, null=True)),
                ("check_in_3", models.TimeField(blank=True, null=True)),
                ("check_out_3", models.TimeField(blank=True, null=True)),
                ("check_in_4", models.TimeField(blank=True, null=True)),
                ("check_out_4", models.TimeField(blank=True, null=True)),
                ("check_in_5", models.TimeField(blank=True, null=True)),
                ("check_out_5", models.TimeField(blank=True, null=True)),
                ("check_in_6", models.TimeField(blank=True, null=True)),
                ("check_out_6", models.TimeField(blank=True, null=True)),
                ("total_time", models.DurationField(default=datetime.timedelta(0))),
                ("break_time", models.DurationField(default=datetime.timedelta(0))),
                ("work_time", models.DurationField(default=datetime.timedelta(0))),
                ("overtime", models.DurationField(default=datetime.timedelta(0))),
                ("undertime", models.DurationField(default=datetime.timedelta(0))),
                ("first_in_time", models.TimeField(blank=True, null=True)),
                ("last_out_time", models.TimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PRESENT", "Present"),
                            ("ABSENT", "Absent"),
                            ("LATE", "Late"),
                            ("HALF_DAY", "Half Day"),
                            ("LEAVE", "On Leave"),
                            ("HOLIDAY", "Holiday"),
                            ("INCOMPLETE", "Incomplete"),
                            ("EARLY_DEPARTURE", "Early Departure"),
                        ],
                        default="ABSENT",
                        max_length=20,
                    ),
                ),
                ("late_minutes", models.PositiveIntegerField(default=0)),
                ("early_departure_minutes", models.PositiveIntegerField(default=0)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("is_manual_entry", models.BooleanField(default=False)),
                ("is_holiday", models.BooleanField(default=False)),
                ("is_weekend", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_attendance_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "attendance_records",
                "ordering": ["-date", "employee__employee_code"],
            },
        ),
        migrations.CreateModel(
            name="AttendanceDevice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("device_id", models.CharField(max_length=50, unique=True)),
                ("device_name", models.CharField(max_length=100)),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("REALAND_A_F011", "REALAND A-F011"),
                            ("ZKTECO", "ZKTeco Device"),
                            ("MANUAL", "Manual Entry"),
                            ("MOBILE", "Mobile App"),
                            ("WEB", "Web Portal"),
                        ],
                        default="REALAND_A_F011",
                        max_length=20,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("port", models.PositiveIntegerField(default=4370)),
                ("location", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("MAINTENANCE", "Under Maintenance"),
                            ("ERROR", "Error"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("last_sync_time", models.DateTimeField(blank=True, null=True)),
                ("sync_interval_minutes", models.PositiveIntegerField(default=5)),
                ("max_users", models.PositiveIntegerField(default=1000)),
                ("max_transactions", models.PositiveIntegerField(default=100000)),
                (
                    "firmware_version",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_devices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="accounts.department",
                    ),
                ),
            ],
            options={
                "db_table": "attendance_devices",
                "ordering": ["device_name"],
            },
        ),
        migrations.CreateModel(
            name="Shift",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                (
                    "shift_type",
                    models.CharField(
                        choices=[
                            ("REGULAR", "Regular Shift"),
                            ("MORNING", "Morning Shift"),
                            ("AFTERNOON", "Afternoon Shift"),
                            ("NIGHT", "Night Shift"),
                            ("FLEXIBLE", "Flexible Hours"),
                            ("PART_TIME", "Part Time"),
                        ],
                        default="REGULAR",
                        max_length=20,
                    ),
                ),
                ("code", models.CharField(max_length=10, unique=True)),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("break_duration_minutes", models.PositiveIntegerField(default=75)),
                ("grace_period_minutes", models.PositiveIntegerField(default=15)),
                ("overtime_threshold_minutes", models.PositiveIntegerField(default=0)),
                (
                    "working_hours",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("9.75"), max_digits=4
                    ),
                ),
                ("is_night_shift", models.BooleanField(default=False)),
                ("weekend_applicable", models.BooleanField(default=False)),
                ("holiday_applicable", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_shifts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "attendance_shifts",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="MonthlyAttendanceSummary",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("year", models.PositiveIntegerField()),
                (
                    "month",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ]
                    ),
                ),
                (
                    "total_work_time",
                    models.DurationField(default=datetime.timedelta(0)),
                ),
                (
                    "total_break_time",
                    models.DurationField(default=datetime.timedelta(0)),
                ),
                ("total_overtime", models.DurationField(default=datetime.timedelta(0))),
                (
                    "total_undertime",
                    models.DurationField(default=datetime.timedelta(0)),
                ),
                ("working_days", models.PositiveIntegerField(default=0)),
                ("attended_days", models.PositiveIntegerField(default=0)),
                ("half_days", models.PositiveIntegerField(default=0)),
                ("late_days", models.PositiveIntegerField(default=0)),
                ("early_days", models.PositiveIntegerField(default=0)),
                ("absent_days", models.PositiveIntegerField(default=0)),
                ("leave_days", models.PositiveIntegerField(default=0)),
                ("holiday_days", models.PositiveIntegerField(default=0)),
                (
                    "attendance_percentage",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "punctuality_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("100.00"), max_digits=5
                    ),
                ),
                (
                    "average_work_hours",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("earliest_in_time", models.TimeField(blank=True, null=True)),
                ("latest_out_time", models.TimeField(blank=True, null=True)),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="monthly_summaries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="generated_summaries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "attendance_monthly_summaries",
                "ordering": ["-year", "-month", "employee__employee_code"],
            },
        ),
        migrations.CreateModel(
            name="LeaveType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=10, unique=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("ANNUAL", "Annual Leave"),
                            ("SICK", "Sick Leave"),
                            ("MATERNITY", "Maternity Leave"),
                            ("PATERNITY", "Paternity Leave"),
                            ("EMERGENCY", "Emergency Leave"),
                            ("STUDY", "Study Leave"),
                            ("UNPAID", "Unpaid Leave"),
                            ("COMPENSATORY", "Compensatory Leave"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("days_allowed_per_year", models.PositiveIntegerField()),
                (
                    "max_consecutive_days",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("min_notice_days", models.PositiveIntegerField(default=1)),
                ("requires_approval", models.BooleanField(default=True)),
                ("requires_medical_certificate", models.BooleanField(default=False)),
                ("is_paid", models.BooleanField(default=True)),
                ("carry_forward_allowed", models.BooleanField(default=False)),
                (
                    "carry_forward_max_days",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("applicable_after_probation_only", models.BooleanField(default=False)),
                (
                    "gender_specific",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("A", "All")],
                        default="A",
                        max_length=1,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_leave_types",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "attendance_leave_types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="LeaveRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("total_days", models.DecimalField(decimal_places=2, max_digits=5)),
                ("reason", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                            ("CANCELLED", "Cancelled"),
                            ("WITHDRAWN", "Withdrawn"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("applied_at", models.DateTimeField(auto_now_add=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                (
                    "medical_certificate",
                    models.FileField(
                        blank=True, null=True, upload_to="leave_certificates/%Y/%m/"
                    ),
                ),
                (
                    "emergency_contact_during_leave",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("handover_notes", models.TextField(blank=True, null=True)),
                ("is_half_day", models.BooleanField(default=False)),
                (
                    "half_day_period",
                    models.CharField(
                        blank=True,
                        choices=[("MORNING", "Morning"), ("AFTERNOON", "Afternoon")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_leave_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="leave_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "leave_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requests",
                        to="attendance.leavetype",
                    ),
                ),
            ],
            options={
                "db_table": "attendance_leave_requests",
                "ordering": ["-applied_at"],
            },
        ),
        migrations.CreateModel(
            name="LeaveBalance",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("year", models.PositiveIntegerField()),
                ("allocated_days", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "used_days",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "carried_forward_days",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "adjustment_days",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="leave_balances",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "leave_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_balances",
                        to="attendance.leavetype",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_leave_balances",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "attendance_leave_balances",
                "ordering": ["-year", "leave_type__name"],
            },
        ),
        migrations.CreateModel(
            name="Holiday",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("date", models.DateField()),
                (
                    "holiday_type",
                    models.CharField(
                        choices=[
                            ("NATIONAL", "National Holiday"),
                            ("RELIGIOUS", "Religious Holiday"),
                            ("COMPANY", "Company Holiday"),
                            ("OPTIONAL", "Optional Holiday"),
                            ("LOCAL", "Local Holiday"),
                        ],
                        default="NATIONAL",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("is_optional", models.BooleanField(default=False)),
                ("applicable_locations", models.JSONField(blank=True, default=list)),
                ("is_paid", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "applicable_departments",
                    models.ManyToManyField(
                        blank=True, related_name="holidays", to="accounts.department"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_holidays",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "attendance_holidays",
                "ordering": ["date"],
            },
        ),
        migrations.CreateModel(
            name="EmployeeShift",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("effective_from", models.DateField()),
                ("effective_to", models.DateField(blank=True, null=True)),
                ("is_temporary", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_shifts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_shifts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shift",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_employees",
                        to="attendance.shift",
                    ),
                ),
            ],
            options={
                "db_table": "employee_shifts",
                "ordering": ["-effective_from"],
            },
        ),
        migrations.CreateModel(
            name="AttendanceReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("DAILY", "Daily Report"),
                            ("WEEKLY", "Weekly Report"),
                            ("MONTHLY", "Monthly Report"),
                            ("CUSTOM", "Custom Date Range"),
                            ("EMPLOYEE", "Employee Report"),
                            ("DEPARTMENT", "Department Report"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("filters", models.JSONField(blank=True, default=dict)),
                ("report_data", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("GENERATING", "Generating"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="GENERATING",
                        max_length=20,
                    ),
                ),
                ("file_path", models.CharField(blank=True, max_length=500, null=True)),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "departments",
                    models.ManyToManyField(
                        blank=True,
                        related_name="attendance_reports",
                        to="accounts.department",
                    ),
                ),
                (
                    "employees",
                    models.ManyToManyField(
                        blank=True,
                        related_name="attendance_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generated_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "attendance_reports",
                "ordering": ["-generated_at"],
            },
        ),
        migrations.CreateModel(
            name="AttendanceLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("employee_code", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
                (
                    "log_type",
                    models.CharField(
                        choices=[
                            ("CHECK_IN", "Check In"),
                            ("CHECK_OUT", "Check Out"),
                            ("BREAK_START", "Break Start"),
                            ("BREAK_END", "Break End"),
                            ("OVERTIME_IN", "Overtime In"),
                            ("OVERTIME_OUT", "Overtime Out"),
                            ("MANUAL_ENTRY", "Manual Entry"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "device_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("raw_data", models.JSONField(default=dict)),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROCESSED", "Processed"),
                            ("ERROR", "Error"),
                            ("DUPLICATE", "Duplicate"),
                            ("IGNORED", "Ignored"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="attendance.attendancedevice",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendance_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "attendance_logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="AttendanceCorrection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "correction_type",
                    models.CharField(
                        choices=[
                            ("TIME_ADJUSTMENT", "Time Adjustment"),
                            ("STATUS_CHANGE", "Status Change"),
                            ("MANUAL_ENTRY", "Manual Entry"),
                            ("DEVICE_ERROR", "Device Error Correction"),
                            ("LEAVE_ADJUSTMENT", "Leave Adjustment"),
                        ],
                        max_length=20,
                    ),
                ),
                ("reason", models.TextField()),
                ("original_data", models.JSONField(default=dict)),
                ("corrected_data", models.JSONField(default=dict)),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_corrections",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "attendance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="corrections",
                        to="attendance.attendance",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requested_corrections",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "attendance_corrections",
                "ordering": ["-requested_at"],
            },
        ),
        migrations.AddField(
            model_name="attendance",
            name="device",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="attendance_records",
                to="attendance.attendancedevice",
            ),
        ),
        migrations.AddField(
            model_name="attendance",
            name="employee",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attendance_records",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="attendance",
            name="shift",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="attendance_records",
                to="attendance.shift",
            ),
        ),
        migrations.AddIndex(
            model_name="shift",
            index=models.Index(fields=["code"], name="attendance__code_087f5c_idx"),
        ),
        migrations.AddIndex(
            model_name="shift",
            index=models.Index(
                fields=["shift_type"], name="attendance__shift_t_78bfbb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shift",
            index=models.Index(
                fields=["is_active"], name="attendance__is_acti_2aefa8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="monthlyattendancesummary",
            index=models.Index(
                fields=["employee", "year", "month"],
                name="attendance__employe_892c45_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="monthlyattendancesummary",
            index=models.Index(
                fields=["year", "month"], name="attendance__year_aa9c70_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="monthlyattendancesummary",
            unique_together={("employee", "year", "month")},
        ),
        migrations.AddIndex(
            model_name="leavetype",
            index=models.Index(fields=["code"], name="attendance__code_8f4922_idx"),
        ),
        migrations.AddIndex(
            model_name="leavetype",
            index=models.Index(
                fields=["category"], name="attendance__categor_bb537b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="leavetype",
            index=models.Index(
                fields=["is_active"], name="attendance__is_acti_1453fa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="leaverequest",
            index=models.Index(
                fields=["employee", "status"], name="attendance__employe_444ebc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="leaverequest",
            index=models.Index(
                fields=["leave_type", "status"], name="attendance__leave_t_9e6a86_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="leaverequest",
            index=models.Index(
                fields=["start_date", "end_date"], name="attendance__start_d_a38e05_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="leaverequest",
            index=models.Index(fields=["status"], name="attendance__status_7fb7c2_idx"),
        ),
        migrations.AddIndex(
            model_name="leaverequest",
            index=models.Index(
                fields=["applied_at"], name="attendance__applied_dfe2be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="leavebalance",
            index=models.Index(
                fields=["employee", "year"], name="attendance__employe_29332d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="leavebalance",
            index=models.Index(
                fields=["leave_type", "year"], name="attendance__leave_t_603ba7_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="leavebalance",
            unique_together={("employee", "leave_type", "year")},
        ),
        migrations.AddIndex(
            model_name="holiday",
            index=models.Index(fields=["date"], name="attendance__date_e344d1_idx"),
        ),
        migrations.AddIndex(
            model_name="holiday",
            index=models.Index(
                fields=["holiday_type"], name="attendance__holiday_671fff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="holiday",
            index=models.Index(
                fields=["is_active"], name="attendance__is_acti_a7e360_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="holiday",
            unique_together={("name", "date")},
        ),
        migrations.AddIndex(
            model_name="employeeshift",
            index=models.Index(
                fields=["employee", "effective_from"],
                name="employee_sh_employe_0baedf_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="employeeshift",
            index=models.Index(
                fields=["shift", "is_active"], name="employee_sh_shift_i_449ceb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employeeshift",
            index=models.Index(
                fields=["effective_from", "effective_to"],
                name="employee_sh_effecti_a7ee9a_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="employeeshift",
            unique_together={("employee", "effective_from")},
        ),
        migrations.AddIndex(
            model_name="attendancereport",
            index=models.Index(
                fields=["report_type", "status"], name="attendance__report__23ac55_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancereport",
            index=models.Index(
                fields=["generated_by", "status"], name="attendance__generat_020bc8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancereport",
            index=models.Index(
                fields=["start_date", "end_date"], name="attendance__start_d_42bf99_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancelog",
            index=models.Index(
                fields=["employee_code", "timestamp"],
                name="attendance__employe_aeb427_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="attendancelog",
            index=models.Index(
                fields=["employee", "timestamp"], name="attendance__employe_fe6aa5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancelog",
            index=models.Index(
                fields=["device", "timestamp"], name="attendance__device__569090_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancelog",
            index=models.Index(
                fields=["processing_status"], name="attendance__process_5e9bc4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancelog",
            index=models.Index(
                fields=["log_type"], name="attendance__log_typ_690a9c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancelog",
            index=models.Index(
                fields=["timestamp"], name="attendance__timesta_ce8f0f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancedevice",
            index=models.Index(
                fields=["device_id"], name="attendance__device__86354d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancedevice",
            index=models.Index(
                fields=["device_type"], name="attendance__device__b96b6f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancedevice",
            index=models.Index(fields=["status"], name="attendance__status_abddf3_idx"),
        ),
        migrations.AddIndex(
            model_name="attendancedevice",
            index=models.Index(
                fields=["is_active"], name="attendance__is_acti_c16d67_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancecorrection",
            index=models.Index(
                fields=["attendance", "status"], name="attendance__attenda_114b06_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancecorrection",
            index=models.Index(
                fields=["requested_by", "status"], name="attendance__request_e3c285_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancecorrection",
            index=models.Index(fields=["status"], name="attendance__status_0056b6_idx"),
        ),
        migrations.AddIndex(
            model_name="attendance",
            index=models.Index(
                fields=["employee", "date"], name="attendance__employe_6b3da7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendance",
            index=models.Index(fields=["date"], name="attendance__date_19baa0_idx"),
        ),
        migrations.AddIndex(
            model_name="attendance",
            index=models.Index(fields=["status"], name="attendance__status_5b1243_idx"),
        ),
        migrations.AddIndex(
            model_name="attendance",
            index=models.Index(
                fields=["is_manual_entry"], name="attendance__is_manu_dd2044_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="attendance",
            unique_together={("employee", "date")},
        ),
    ]
